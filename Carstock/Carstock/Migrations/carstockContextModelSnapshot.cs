// <auto-generated />
using System;
using Carstock.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Carstock.Migrations
{
    [DbContext(typeof(carstockContext))]
    partial class carstockContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Carstock.Models.Admin", b =>
                {
                    b.Property<int>("IdAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idAdmin");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAdmin"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.HasKey("IdAdmin")
                        .HasName("admin_PK");

                    b.ToTable("admin", (string)null);
                });

            modelBuilder.Entity("Carstock.Models.Car", b =>
                {
                    b.Property<int>("IdCar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCar");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCar"), 1L, 1);

                    b.Property<int?>("IdCustomer")
                        .HasColumnType("int")
                        .HasColumnName("idCustomer");

                    b.Property<int?>("IdModel")
                        .HasColumnType("int")
                        .HasColumnName("idModel");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("IdCar")
                        .HasName("car_PK");

                    b.HasIndex("IdCustomer");

                    b.HasIndex("IdModel");

                    b.ToTable("car", (string)null);
                });

            modelBuilder.Entity("Carstock.Models.Carmodel", b =>
                {
                    b.Property<int>("IdModel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idModel");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdModel"), 1L, 1);

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("brand");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("category");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("model");

                    b.Property<int>("Price")
                        .HasColumnType("int")
                        .HasColumnName("price");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type");

                    b.HasKey("IdModel")
                        .HasName("carmodel_PK");

                    b.ToTable("carmodel", (string)null);
                });

            modelBuilder.Entity("Carstock.Models.Customer", b =>
                {
                    b.Property<int>("IdCustomer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCustomer");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCustomer"), 1L, 1);

                    b.Property<string>("BankAccount")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("bankAccount");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("firstname");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("lastname");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("password");

                    b.HasKey("IdCustomer")
                        .HasName("customer_PK");

                    b.ToTable("customer", (string)null);
                });

            modelBuilder.Entity("Carstock.Models.Car", b =>
                {
                    b.HasOne("Carstock.Models.Customer", "IdCustomerNavigation")
                        .WithMany("Cars")
                        .HasForeignKey("IdCustomer")
                        .HasConstraintName("car_customer_FK");

                    b.HasOne("Carstock.Models.Carmodel", "IdModelNavigation")
                        .WithMany("Cars")
                        .HasForeignKey("IdModel")
                        .HasConstraintName("car_carmodel0_FK");

                    b.Navigation("IdCustomerNavigation");

                    b.Navigation("IdModelNavigation");
                });

            modelBuilder.Entity("Carstock.Models.Carmodel", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("Carstock.Models.Customer", b =>
                {
                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
